{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
import streamlit as st\
st.set_option('deprecation.showPyplotGlobalUse', False)\
import pandas as pd\
import numpy as np\
st.set_page_config(page_title='Model Hyperparameter Tuning App',layout='wide') \
#Setting Page layout, Page expands to full width\
import sklearn\
from sklearn.preprocessing import StandardScaler\
from sklearn.preprocessing import LabelEncoder\
from sklearn.model_selection import train_test_split,StratifiedKFold, cross_val_score\
from sklearn.pipeline import Pipeline, make_pipeline\
from sklearn.metrics import accuracy_score\
from sklearn import tree\
from sklearn.model_selection import RandomizedSearchCV\
from IPython.display import Image\
from sklearn import metrics\
from sklearn.metrics import r2_score,mean_squared_error\
# we will use Gradient Boosting model as this gives us best result \
# from sklearn.ensemble import GradientBoostingRegressor\
import xgboost\
from xgboost import XGBRegressor\
from sklearn.tree import DecisionTreeRegressor\
from sklearn.ensemble import (\
    AdaBoostRegressor,\
    GradientBoostingRegressor,\
    RandomForestRegressor,\
)\
import plotly.graph_objects as go #to plot visualization\
import plotly.express as px\
import matplotlib.pyplot as plt\
import altair as alt\
import seaborn as sns}